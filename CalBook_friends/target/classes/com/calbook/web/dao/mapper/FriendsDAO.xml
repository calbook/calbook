<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.calbook.web.dao.FriendsDAO">

	<!-- 친구리스트 불러오기(친구 페이지 시작) -->
	<select id="getFriends" resultType="com.calbook.web.vo.Members">
		SELECT * FROM ((SELECT * FROM FRIENDS F INNER JOIN MEMBERS M ON F.F_EMAIL=M.EMAIL WHERE RELATION=1 AND M_EMAIL=#{email}) UNION (SELECT * FROM FRIENDS F INNER JOIN MEMBERS M ON F.M_EMAIL=M.EMAIL WHERE RELATION=1 AND F_EMAIL=#{email})) ORDER BY NICK
	</select>
	
	<!-- 내친구 검색 리스트 불러오기(내 친구 중 검색) -->
	<select id="getSearchMyFriends" resultType="com.calbook.web.vo.Members">
		SELECT * FROM ((SELECT * FROM FRIENDS F INNER JOIN MEMBERS M ON F.F_EMAIL=M.EMAIL WHERE RELATION=1 AND M_EMAIL=#{param1}) UNION (SELECT * FROM FRIENDS F INNER JOIN MEMBERS M ON F.M_EMAIL=M.EMAIL WHERE RELATION=1 AND F_EMAIL=#{param1})) WHERE ${param2} LIKE '%${param3}%' ORDER BY ${param2}
	</select>
	
	<!-- 새친구 검색 리스트 불러오기(전체 친구 중 검색) -->
	<select id="getSearchNewFriends" resultType="com.calbook.web.vo.Members">
		SELECT * FROM MEMBERS WHERE ${param1} LIKE #{param2}
	</select>
	
	<!-- 친구 삭제 -->
	<delete id="delFriend">
		DELETE FRIENDS WHERE (M_EMAIL=#{param1} AND F_EMAIL=#{param2}) OR (M_EMAIL=#{param2} AND F_EMAIL=#{param1})
	</delete>
	
</mapper>